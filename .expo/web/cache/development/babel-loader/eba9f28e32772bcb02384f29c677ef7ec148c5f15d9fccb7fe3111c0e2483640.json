{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { auth, googleProvider } from \"../../config/firebaseConfig\";\nimport { signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth';\nimport { useState, useEffect, useRef } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignInScreen(_ref) {\n  var Navigation = _ref.Navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    user = _useState6[0],\n    setUser = _useState6[1];\n  var inputRef = useRef();\n  {}\n  useEffect(function () {\n    inputRef.current.focus();\n  }, []);\n  var signIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield signInWithEmailAndPassword(auth, email, password);\n      } catch (err) {\n        console.error('email not registered');\n      }\n    });\n    return function signIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var signInWithGoogle = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield signInWithPopup(auth, googleProvider);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n    return function signInWithGoogle() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.Container,\n    children: [_jsx(Text, {\n      style: styles.Title,\n      children: \"Add you Credential\"\n    }), _jsxs(View, {\n      style: styles.SignInScreen,\n      children: [_jsx(TextInput, {\n        ref: inputRef,\n        placeholderTextColor: \"white\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.TextInput,\n        placeholder: \"email\"\n      }), _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"password\",\n        placeholderTextColor: \"white\",\n        value: password,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(Button, {\n        color: \"plum\",\n        title: \"Submit\",\n        onPress: signIn\n      }), _jsx(Text, {\n        style: styles.Text,\n        children: \"Don't have account?\"\n      }), _jsx(Pressable, {\n        children: _jsx(Text, {\n          style: styles.signUp,\n          onPress: function onPress() {\n            return Navigation.Navigate(\"SignUpScreen\");\n          },\n          children: \" sign up\"\n        })\n      }), _jsx(Button, {\n        onPress: signInWithGoogle\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  Container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 20,\n    backgroundColor: \"rgb(52, 58, 78)\"\n  },\n  SignInScreen: {\n    width: \"100%\",\n    alignSelf: \"center\",\n    padding: 15\n  },\n  Text: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 16,\n    paddingTop: 15,\n    textAlign: \"center\"\n  },\n  signUp: {\n    fontWeight: \"bold\",\n    paddingTop: 25,\n    color: \"plum\",\n    fontSize: 20,\n    alignSelf: \"center\"\n  },\n  TextInput: {\n    height: 40,\n    backgroundColor: \"rgb(78, 68, 112)\",\n    borderColor: \"black\",\n    borderWidth: 0.5,\n    borderRadius: 16,\n    marginVertical: 10,\n    paddingHorizontal: 10,\n    fontSize: 18\n  },\n  Title: {\n    alignSelf: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 22,\n    padding: 16,\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["auth","googleProvider","signInWithEmailAndPassword","signInWithPopup","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","SignInScreen","_ref","Navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","user","setUser","inputRef","current","focus","signIn","_ref2","_asyncToGenerator","err","console","error","apply","arguments","signInWithGoogle","_ref3","KeyboardAvoidingView","behavior","style","styles","Container","children","Text","Title","View","TextInput","ref","placeholderTextColor","value","onChangeText","text","placeholder","secureTextEntry","Button","color","title","onPress","Pressable","signUp","Navigate","StyleSheet","create","flex","justifyContent","paddingHorizontal","backgroundColor","width","alignSelf","padding","fontWeight","fontSize","paddingTop","textAlign","height","borderColor","borderWidth","borderRadius","marginVertical"],"sources":["E:/Jignesh Developer/react-native/nativeapp/Screen/SignInScreen/SignInScreen.js"],"sourcesContent":["import { Text, View, TextInput, Button,StyleSheet, KeyboardAvoidingView,Pressable} from \"react-native\";\r\n\r\nimport { auth, googleProvider } from '../../config/firebaseConfig'\r\nimport { signInWithEmailAndPassword,signInWithPopup } from 'firebase/auth'\r\nimport { useState, useEffect, useRef } from 'react'\r\n\r\n\r\n\r\nexport default function SignInScreen({Navigation}) {\r\n  const [email,setEmail] = useState(\"\")\r\n  const[password,setPassword]= useState(\"\")\r\n  const [user, setUser] = useState({})\r\n  const inputRef = useRef();\r\n\r\n  {/*onAuthStateChanged(auth, (user) => {\r\n    setUser(user)\r\n})\r\nconsole.log(user?.userName)*/}\r\n\r\nuseEffect(() => {\r\n   inputRef.current.focus()\r\n}, [])\r\n\r\n\r\n\r\nconst signIn = async () => {\r\n\r\n    try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n        \r\n    }\r\n    catch (err) {\r\n        console.error('email not registered')\r\n    }\r\n}\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n        await signInWithPopup(auth, googleProvider)\r\n       \r\n    }\r\n    catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.Container}>\r\n        \r\n        <Text style={styles.Title}>\r\n            Add you Credential\r\n        </Text>\r\n    <View style={styles.SignInScreen}>\r\n          <TextInput\r\n            ref={inputRef}  \r\n            placeholderTextColor={\"white\"}\r\n            value={email}\r\n             onChangeText={(text) => setEmail(text)}\r\n          style={styles.TextInput}\r\n            placeholder=\"email\"\r\n            />\r\n          <TextInput\r\n          style={styles.TextInput}\r\n            placeholder=\"password\"\r\n            placeholderTextColor={\"white\"}\r\n            value={password}\r\n            secureTextEntry\r\n            onChangeText={(text) => setPassword(text)}\r\n          />\r\n      <Button color=\"plum\"  title=\"Submit\" onPress={signIn} />\r\n      <Text style={styles.Text}>Don't have account?</Text>\r\n         <Pressable>\r\n          <Text style={styles.signUp} onPress={() => Navigation.Navigate(\"SignUpScreen\")} > sign up</Text>\r\n          </Pressable>\r\n          <Button onPress={signInWithGoogle}></Button>\r\n    </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  Container:{\r\n      flex:1,\r\n      justifyContent:\"center\",\r\n      paddingHorizontal:20,\r\n      backgroundColor:\"rgb(52, 58, 78)\",\r\n      \r\n    },\r\n  SignInScreen:{\r\n     width:\"100%\",\r\n    alignSelf:\"center\",\r\n   padding:15,\r\n    },\r\n    Text:{\r\n      fontWeight:\"bold\",\r\n   color:\"white\",\r\n      fontSize:16,\r\n      paddingTop:15,\r\n      textAlign:\"center\"\r\n    },\r\n    signUp:{\r\n      fontWeight:\"bold\",\r\n      paddingTop:25,\r\n      color:\"plum\",\r\n      fontSize:20,\r\n      alignSelf:\"center\"\r\n    },\r\n    TextInput:{\r\nheight:40,\r\nbackgroundColor:\"rgb(78, 68, 112)\",\r\nborderColor:\"black\",\r\nborderWidth:0.5,\r\nborderRadius:16,\r\nmarginVertical:10,\r\npaddingHorizontal:10,\r\nfontSize:18\r\n    },\r\n    Title:{\r\n      alignSelf:\"center\",\r\n      fontWeight:\"bold\",\r\n      fontSize:22,\r\n      padding:16,\r\n      color:\"white\"\r\n    },\r\n\r\n  })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}